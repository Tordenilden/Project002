// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project002.Repository.Models;

#nullable disable

namespace Project002.Repository.Migrations
{
    [DbContext(typeof(Dbcontext))]
    [Migration("20240417054544_Monday2")]
    partial class Monday2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project002.Repository.Models.Battle", b =>
                {
                    b.Property<int>("BattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BattleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start")
                        .HasColumnType("datetime2");

                    b.HasKey("BattleId");

                    b.ToTable("Battle");

                    b.HasData(
                        new
                        {
                            BattleId = 100,
                            Description = "Really bad",
                            Name = "Imperious",
                            end = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BattleId = 200,
                            Description = "Really bad",
                            Name = "FUnny",
                            end = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project002.Repository.Models.BattleSamurai", b =>
                {
                    b.Property<int>("SamuraiId")
                        .HasColumnType("int");

                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.HasKey("SamuraiId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("BattleSamurai");

                    b.HasData(
                        new
                        {
                            SamuraiId = 10,
                            BattleId = 100
                        },
                        new
                        {
                            SamuraiId = 10,
                            BattleId = 200
                        });
                });

            modelBuilder.Entity("Project002.Repository.Models.Horse", b =>
                {
                    b.Property<int>("HorseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorseId"));

                    b.Property<int>("SamuraiId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HorseId");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Horse");
                });

            modelBuilder.Entity("Project002.Repository.Models.Samurai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Samurai");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Age = 20,
                            Description = "This is serios",
                            Name = "Ulla Skallesmækker"
                        },
                        new
                        {
                            Id = 20,
                            Age = 20,
                            Description = "This is serios",
                            Name = "Ulla BrainFLuid"
                        });
                });

            modelBuilder.Entity("Project002.Repository.Models.BattleSamurai", b =>
                {
                    b.HasOne("Project002.Repository.Models.Battle", "Battle")
                        .WithMany("BattleSamurais")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project002.Repository.Models.Samurai", "Samurai")
                        .WithMany("BattleSamurais")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("Project002.Repository.Models.Horse", b =>
                {
                    b.HasOne("Project002.Repository.Models.Samurai", "Samurai")
                        .WithMany()
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("Project002.Repository.Models.Battle", b =>
                {
                    b.Navigation("BattleSamurais");
                });

            modelBuilder.Entity("Project002.Repository.Models.Samurai", b =>
                {
                    b.Navigation("BattleSamurais");
                });
#pragma warning restore 612, 618
        }
    }
}
